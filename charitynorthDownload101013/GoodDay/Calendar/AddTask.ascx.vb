Imports System.Data
Imports System.Data.OleDb
Imports System.Net
Imports System.Web

Partial Class AddTask
    Inherits System.Web.UI.UserControl

  Protected Sub CategoriesListBox_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles CategoriesListBox.PreRender
    If Not Page.IsPostBack Then
      'Add the items to the TaskCategories DropDownList Web Control
      CategoriesListBox.Items.Add(New ListItem("Meet Client"))
      CategoriesListBox.Items.Add(New ListItem("Survey"))
      CategoriesListBox.Items.Add(New ListItem("First Call"))
      CategoriesListBox.Items.Add(New ListItem("Road Ban/Permits"))
      CategoriesListBox.Items.Add(New ListItem("Excavate"))
      CategoriesListBox.Items.Add(New ListItem("Footing Stand"))
      CategoriesListBox.Items.Add(New ListItem("Footing Pour"))
      CategoriesListBox.Items.Add(New ListItem("Footing Strip"))
      CategoriesListBox.Items.Add(New ListItem("Wall Stand"))
      CategoriesListBox.Items.Add(New ListItem("Wall Pour"))
      CategoriesListBox.Items.Add(New ListItem("Wall Strip"))
      CategoriesListBox.Items.Add(New ListItem("Water Proofing"))
      CategoriesListBox.Items.Add(New ListItem("Backfill"))
      CategoriesListBox.Items.Add(New ListItem("Cleanup"))
      CategoriesListBox.Items.Add(New ListItem("Repair"))
      CategoriesListBox.Items.Add(New ListItem("Call Back"))
      CategoriesListBox.Items.Add(New ListItem("Clearing/Hauling"))
      CategoriesListBox.Items.Add(New ListItem("Planning"))
      CategoriesListBox.Items.Add(New ListItem("Personal"))
      CategoriesListBox.Items.Add(New ListItem("Testing"))
    End If
  End Sub

  Sub Do_Insert(ByVal Sender As Object, ByVal e As EventArgs)
      'Dim parameterStart As Date
      'Dim selectedDay As Date
      Dim parameterEndDate As Date
      'Only update the database if the user entered valid inputs
      If Not Page.IsValid Then Exit Sub

      'Add the event to the database
      Dim connectionString As String

      connectionString = "Provider=Microsoft.Jet.OLEDB.4.0; Data Source=|DataDirectory|calendar.xls;Extended Properties=Excel 8.0;"

      Dim SqlString As String = "Insert Into JobSchedule" & _
      "(Updated,Created,Subject,Start,Duration,EndDate,Categories,Location,Body,Crew,Organizer)" & _
      "Values(@Updated,@Created,@Subject,@Start,@Duration,@EndDate,@Categories,?,?,?,?)"
      '
      '
      Using myConnection As New Data.OleDb.OleDbConnection(connectionString)
          Using myCommand As New  _
          Data.OleDb.OleDbCommand(SqlString, myConnection)
              With myCommand
                  .CommandType = CommandType.Text
                  '.Parameters.AddWithValue("ID", GlobalAppointmentID)
                  '.Parameters.AddWithValue("Updated", Now)
                  '.Parameters.AddWithValue("Created", Now)
                  .Parameters.AddWithValue("Updated", Today & " " & TimeOfDay)
                  ''Created' is the only required field and it is autogenerated by TodaysDate
                  .Parameters.AddWithValue("Created", Today & " " & TimeOfDay)
                  .Parameters.AddWithValue("Subject", SubjectTextBox.Text)

                  Dim datetimeString As String
                  datetimeString = StartDateTextBox.Text & " " & Trim(StartTimeTextBox.Text)

                  .Parameters.AddWithValue("Start", CDate(datetimeString))
                  .Parameters.AddWithValue("Duration", CSng(DurationTextBox.Text))

                  'add duration to Start to calculate EndDate
                  'CSng converts string to Single precision number
                  parameterEndDate = DateAdd("n", CSng(DurationTextBox.Text), CDate(datetimeString))
                  .Parameters.AddWithValue("EndDate", parameterEndDate)

                  .Parameters.AddWithValue("Categories", CategoriesListBox.SelectedItem.Value)
                  .Parameters.AddWithValue("Location", LocationTextBox.Text)
                  .Parameters.AddWithValue("Body", BodyTextBox.Text)
                  .Parameters.AddWithValue("Crew", CrewTextBox.Text)
                  .Parameters.AddWithValue("Organizer", OrganizerTextBox.Text)
              End With

              myConnection.Open()
              myCommand.ExecuteNonQuery()
          End Using
      End Using        'enclosing the database connection in a "Using - End Using" blocking closes automatically
		Response.Redirect("~/Default.aspx")	 'Redirect the user to the calendar
  End Sub

End Class

